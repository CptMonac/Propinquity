Program over XBee:
------------------
o Set Baud rate to 19200
o Use a unique (?) PAN ID
o Set the local and destination address to make sure only two XBees are communicating (?)
o Packetization timeout: 10
o DIO Change detect: FF (or 0x08 for D3 only)
o Jumper to RST

Sender:
o DIO3 = Digital Input (DI)

Receiver:
o DIO3 = Digital Output High (DO High)
o I/O Output Enable: 0 - Disabled
o I/O Line passing input address: FFFF


XBee addressing:
----------------

Broadcast: sendDataString(0xffff, data);
send: sendDataString(addr, data);

Packets:
--------

PROX_OUT_PACKET_TYPE(1): type, stepnumhigh, stepnumlow, activethisandthis+1, activethis+2andthis+3
PROX_IN_PACKET_TYPE(2): type, addr<<1 | touched, turnnumhigh, turnnumlow, proxreadinghigh, proxreadinglow
VIBE_OUT_PACKET_TYPE(3): type, vibe intensity
ACCEL_IN_PACKET_TYPE(4): type, addr(7,8,15,16), x, y, z 
CONFIG_OUT_PACKET_TYPE(5): type, steplengthhigh, steplengthlow
CONFIG_ACK_PACKET_TYPE(6): type, addr, turnlengthhigh, turnlengthlow
VIBE_IN_PACKET_TYPE(7): type, addr (5,6,13,14), buttons(1=left,2=right,3=center,4=all)


data sent to gloves:
getApiId() should be RX_16_RESPONSE


Firmwares:
----------

Sensor firmware:
Send back closest proximity + touch state every 50 ms
Handle LEDs

Anklet:
Send back max. acceleration every 50 ms

Glove:
Receive vibro messages from processing
Reads and sends touch sensor input (?)


XBee configuration:
-------------------

See XBee-config.numbers

Arduino Programming
-------------------

Gloves: propinquityVibeArduino2.pde
(Use LilyPad Arduino w/ATmega328)

The glove Lilypads need to be programmed with the correct address:
static int myAddress = <addr>; //change for each player
VIBE1_PLAYER1 = 5
VIBE2_PLAYER1 = 6
VIBE1_PLAYER2 = D
VIBE2_PLAYER2 = E

Accel: propinquityAccel.pde
The glove Lilypads need to be programmed with the correct address:
static int myAddress = <addr>; //change for each player
ACCEL1_PLAYER1 = 7
ACCEL2_PLAYER1 = 8
ACCEL1_PLAYER2 = F
ACCEL2_PLAYER2 = 0x10

Patch: propinquityFull.pde
(Use Arduino Pro or Pro Mini (3.3V, 8MHz) w/ATmega168)

Comment in the correct configuration for the patch we're programming:
// PROX1_PLAYER1
static int myAddress = 1;
static int initialDelay = 0; //for staggering messages from sensors to avoid packet collision
static int ledFilter1 = 0x80; //128, 64, 32, and 16 -- for higher order bits
static int ledFilter2 = 0x08; //8, 4, 2, and 1 -- for lower order bits

testPatch: Test firmware which constantly cycles the LEDs while giving vibration feedback to the IR sensor

Nodes:
------

Vibe (aka. glove):
o Receives VIBE_OUT_PACKET_TYPE(3) packages
(o Sends VIBE_IN_PACKET_TYPE(7) packages) - not used

Accel:
o Sends ACCEL_IN_PACKET_TYPE(4) packages (every 100 ms)

Patch:
o Receives PROX_OUT_PACKET_TYPE(1)
           CONFIG_OUT_PACKET_TYPE(5)
o Sends CONFIG_ACK_PACKET_TYPE(6)
        PROX_IN_PACKET_TYPE(2)


Hardware mods:
--------------

On the prox router board, we need to bridge flex cable pin 12 and pin 17 (they are now both +3.3V)

XBee issues:
------------

Bad checksum, discarding packet. Local: 00000031, Remote: 00000001, Length: 126
-> This happens from time to time while talking to the master XBees, but not very well reproducible.

Trouble in paradise, we received a packet from patch '6', which is not assigned to a player
-> Fixed by removing "& 7" from Level.pde:418:
        int patch = (packet[1] >> 1) & 7;
=>      int patch = (packet[1] >> 1);

Processing libraries:
---------------------
cd ~/Documents/Processing/libraries/xbee/source
javac -d . *.java -cp /Applications/Processing.app/Contents/Resources/Java/core.jar:/Applications/Processing.app/Contents/Resources/Java/libraries/serial/library/serial.jar
jar cf ../library/xbee.jar xbee

IR sensors:
-----------

I believe IR sensors are sensitive to the reflectance of the material
it bounces off (palm of the other player's hand). It would make sense
to use a opaque white/light gray material for this, to get good and
reproducable readings.

Measured values:
o input voltage = 3.2V
o baseline (infinite distance) = 0.99V
o peak (ca. 4 cm) = 2.26V
o touch = 1.05V

Startup behavior:
-----------------

Gloves:
- Will buzz for 1 second
- Red LED on XBee board will light while power is on

Patches:
- Will cycle Red, Green, Blue for 1 second each, then buzz for 1 second
- While cycling the LED On the seeediuno will blink

Misc Ideas:
-----------

o Detect battery outage. The symptom today appears to be flickering LEDs

Proximity readings and scoring:
-------------------------------

The sharp sensors will result in a 10-bit integer (0-1023) on the Arduino.
As we've measured the voltages when running in battery-powered operation, this translates to the following:
o baseline (infinite distance) = 316
o peak (ca. 4 cm) = 722
o touch = 335

- The patch sends (value - 250) to Processing => value range 66 - 472
- The game ignores all readings < 80 (Plauer.pde:267)
- Each "step", all reading are added up and in the end divided by the number of readings
- Points are awarded per step as average proximity * accelMultiplier
- The glove vibrators feedback are calculated based on some averaging. I think this should be made simpler and clearer, e.g. only two different vibration intensities (Player.processProxReading())
